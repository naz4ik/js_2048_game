{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n'use strict';\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n'use strict';\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ], initialScore = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.board = initialState;\n        this.currentBoard = (0, $227c6742e0ff6f82$export$71511d61b312f219)(initialState);\n        this.initialScore = initialScore;\n        this.currentScore = initialScore;\n        this.status = 'idle';\n        this.hasWon = false;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyCells = [];\n                for(var row = 0; row < this.board.length; row++){\n                    for(var col = 0; col < this.board[row].length; col++)if (this.board[row][col] === 0) emptyCells.push({\n                        row: row,\n                        col: col\n                    });\n                }\n                if (emptyCells.length > 0) {\n                    var randomCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n                    this.board[randomCell.row][randomCell.col] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"slideTiles\",\n            value: function slideTiles(columns) {\n                for(var col = 0; col < 4; col++){\n                    var column = columns[col];\n                    column = this.combineTiles(column);\n                    for(var row = 0; row < 4; row++)this.board[row][col] = column[row];\n                }\n            }\n        },\n        {\n            key: \"combineTiles\",\n            value: function combineTiles(tiles) {\n                var result = tiles.filter(function(tile) {\n                    return tile !== 0;\n                });\n                var scoreChange = 0;\n                for(var i = 0; i < result.length - 1; i++)if (result[i] === result[i + 1]) {\n                    result[i] *= 2;\n                    result[i + 1] = 0;\n                    scoreChange += result[i];\n                }\n                var newTiles = result.filter(function(tile) {\n                    return tile !== 0;\n                }).concat([\n                    0,\n                    0,\n                    0,\n                    0\n                ]).slice(0, 4);\n                this.currentScore += scoreChange;\n                return newTiles;\n            }\n        },\n        {\n            key: \"cellsGroupedByColumn\",\n            value: function cellsGroupedByColumn() {\n                var groupedColumns = [\n                    [],\n                    [],\n                    [],\n                    []\n                ];\n                for(var col = 0; col < 4; col++)for(var row = 0; row < 4; row++)groupedColumns[col].push(this.board[row][col]);\n                return groupedColumns;\n            }\n        },\n        {\n            key: \"cellsGroupedByRow\",\n            value: function cellsGroupedByRow() {\n                var groupedRows = [\n                    [],\n                    [],\n                    [],\n                    []\n                ];\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++)groupedRows[row].push(this.board[row][col]);\n                return groupedRows;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var previousState = JSON.stringify(this.board);\n                var rows = this.cellsGroupedByRow();\n                for(var rowIdx = 0; rowIdx < 4; rowIdx++){\n                    var row = rows[rowIdx];\n                    row = this.combineTiles(row);\n                    this.board[rowIdx] = row;\n                }\n                if (JSON.stringify(this.board) !== previousState) this.addRandomTile();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var previousState = JSON.stringify(this.board);\n                var rows = this.cellsGroupedByRow();\n                for(var rowIdx = 0; rowIdx < 4; rowIdx++){\n                    var row = rows[rowIdx].reverse();\n                    row = this.combineTiles(row);\n                    row.reverse();\n                    this.board[rowIdx] = row;\n                }\n                if (JSON.stringify(this.board) !== previousState) this.addRandomTile();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var previousState = JSON.stringify(this.board);\n                var columns = this.cellsGroupedByColumn();\n                for(var col = 0; col < 4; col++){\n                    var column = columns[col];\n                    column = this.combineTiles(column);\n                    for(var row = 0; row < 4; row++)this.board[row][col] = column[row];\n                }\n                if (JSON.stringify(this.board) !== previousState) this.addRandomTile();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var previousState = JSON.stringify(this.board);\n                var columns = this.cellsGroupedByColumn();\n                for(var col = 0; col < 4; col++){\n                    var column = columns[col].reverse();\n                    column = this.combineTiles(column);\n                    column.reverse();\n                    for(var row = 0; row < 4; row++)this.board[row][col] = column[row];\n                }\n                if (JSON.stringify(this.board) !== previousState) this.addRandomTile();\n            }\n        },\n        {\n            key: \"win\",\n            value: function win() {\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.board[row][col] === 2048) {\n                        this.hasWon = true;\n                        return true;\n                    }\n                }\n                return false;\n            }\n        },\n        {\n            key: \"canMove\",\n            value: function canMove() {\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    if (this.board[row][col] === 0) return true;\n                    if (row < 3 && this.board[row][col] === this.board[row + 1][col]) return true;\n                    if (col < 3 && this.board[row][col] === this.board[row][col + 1]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.currentScore;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.currentBoard = JSON.parse(JSON.stringify(this.board));\n                this.currentScore = this.initialScore;\n                this.addRandomTile();\n                this.addRandomTile();\n                this.status = 'playing';\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.board = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.currentBoard = JSON.parse(JSON.stringify(this.board));\n                this.currentScore = this.initialScore;\n                this.status = 'idle';\n                this.hasWon = false;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$startButton = document.querySelector('.start');\nvar $197cd56b15c33885$var$gameField = document.querySelector('.game-field');\nvar $197cd56b15c33885$var$startMessage = document.querySelector('.message-start');\nvar $197cd56b15c33885$var$loseMessage = document.querySelector('.message-lose');\nvar $197cd56b15c33885$var$winMessage = document.querySelector('.message-win');\nfunction $197cd56b15c33885$var$updateBoardUI() {\n    var rows = $197cd56b15c33885$var$gameField.querySelectorAll('.field-row');\n    var score = $197cd56b15c33885$var$game.getScore();\n    document.querySelector('.game-score').textContent = score;\n    $197cd56b15c33885$var$game.getState().forEach(function(row, rowIndex) {\n        var cells = rows[rowIndex].querySelectorAll('.field-cell');\n        row.forEach(function(cellValue, colIndex) {\n            var cell = cells[colIndex];\n            cell.textContent = '';\n            cell.className = 'field-cell';\n            if (cellValue !== 0) {\n                cell.textContent = cellValue;\n                cell.classList.add(\"field-cell--\".concat(cellValue));\n            }\n        });\n    });\n}\n$197cd56b15c33885$var$startButton.addEventListener('click', function() {\n    if ($197cd56b15c33885$var$game.getStatus() === 'idle') {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$updateBoardUI($197cd56b15c33885$var$game);\n        $197cd56b15c33885$var$startButton.textContent = 'Restart';\n        $197cd56b15c33885$var$startButton.classList.add('restart');\n        $197cd56b15c33885$var$startMessage.classList.add('hidden');\n    } else if ($197cd56b15c33885$var$game.getStatus() === 'playing') {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$updateBoardUI($197cd56b15c33885$var$game);\n        $197cd56b15c33885$var$startButton.textContent = 'Start';\n        $197cd56b15c33885$var$startButton.classList.remove('restart');\n        $197cd56b15c33885$var$winMessage.classList.add('hidden');\n        $197cd56b15c33885$var$loseMessage.classList.add('hidden');\n        $197cd56b15c33885$var$startMessage.classList.remove('hidden');\n    }\n});\ndocument.addEventListener('keydown', function(keyboardEvent) {\n    if ($197cd56b15c33885$var$game.getStatus() !== 'playing') return;\n    switch(keyboardEvent.key){\n        case 'ArrowUp':\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case 'ArrowDown':\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case 'ArrowLeft':\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case 'ArrowRight':\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        default:\n            return;\n    }\n    if ($197cd56b15c33885$var$game.win()) {\n        if ($197cd56b15c33885$var$game.hasWon) $197cd56b15c33885$var$winMessage.classList.remove('hidden');\n    }\n    if (!$197cd56b15c33885$var$game.canMove()) $197cd56b15c33885$var$loseMessage.classList.remove('hidden');\n    $197cd56b15c33885$var$updateBoardUI();\n});\n\n})();\n//# sourceMappingURL=index.ae5af2de.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\nconst startButton = document.querySelector('.start');\nconst gameField = document.querySelector('.game-field');\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\n\nfunction updateBoardUI() {\n  const rows = gameField.querySelectorAll('.field-row');\n  const score = game.getScore();\n\n  document.querySelector('.game-score').textContent = score;\n\n  game.getState().forEach((row, rowIndex) => {\n    const cells = rows[rowIndex].querySelectorAll('.field-cell');\n\n    row.forEach((cellValue, colIndex) => {\n      const cell = cells[colIndex];\n\n      cell.textContent = '';\n      cell.className = 'field-cell';\n\n      if (cellValue !== 0) {\n        cell.textContent = cellValue;\n        cell.classList.add(`field-cell--${cellValue}`);\n      }\n    });\n  });\n}\n\nstartButton.addEventListener('click', () => {\n  if (game.getStatus() === 'idle') {\n    game.start();\n    updateBoardUI(game);\n    startButton.textContent = 'Restart';\n    startButton.classList.add('restart');\n    startMessage.classList.add('hidden');\n  } else if (game.getStatus() === 'playing') {\n    game.restart();\n    updateBoardUI(game);\n    startButton.textContent = 'Start';\n    startButton.classList.remove('restart');\n    winMessage.classList.add('hidden');\n    loseMessage.classList.add('hidden');\n    startMessage.classList.remove('hidden');\n  }\n});\n\ndocument.addEventListener('keydown', (keyboardEvent) => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  switch (keyboardEvent.key) {\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n\n    default:\n      return;\n  }\n\n  if (game.win()) {\n    if (game.hasWon) {\n      winMessage.classList.remove('hidden');\n    }\n  }\n\n  if (!game.canMove()) {\n    loseMessage.classList.remove('hidden');\n  }\n\n  updateBoardUI();\n});\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n    initialScore = 0,\n  ) {\n    this.board = initialState;\n    this.currentBoard = [...initialState];\n    this.initialScore = initialScore;\n    this.currentScore = initialScore;\n    this.status = 'idle';\n    this.hasWon = false;\n  }\n\n  addRandomTile() {\n    const emptyCells = [];\n\n    for (let row = 0; row < this.board.length; row++) {\n      for (let col = 0; col < this.board[row].length; col++) {\n        if (this.board[row][col] === 0) {\n          emptyCells.push({ row, col });\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const randomCell =\n        emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      this.board[randomCell.row][randomCell.col] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  slideTiles(columns) {\n    for (let col = 0; col < 4; col++) {\n      let column = columns[col];\n\n      column = this.combineTiles(column);\n\n      for (let row = 0; row < 4; row++) {\n        this.board[row][col] = column[row];\n      }\n    }\n  }\n\n  combineTiles(tiles) {\n    const result = tiles.filter((tile) => tile !== 0);\n    let scoreChange = 0;\n\n    for (let i = 0; i < result.length - 1; i++) {\n      if (result[i] === result[i + 1]) {\n        result[i] *= 2;\n        result[i + 1] = 0;\n        scoreChange += result[i];\n      }\n    }\n\n    const newTiles = result\n      .filter((tile) => tile !== 0)\n      .concat([0, 0, 0, 0])\n      .slice(0, 4);\n\n    this.currentScore += scoreChange;\n\n    return newTiles;\n  }\n\n  cellsGroupedByColumn() {\n    const groupedColumns = [[], [], [], []];\n\n    for (let col = 0; col < 4; col++) {\n      for (let row = 0; row < 4; row++) {\n        groupedColumns[col].push(this.board[row][col]);\n      }\n    }\n\n    return groupedColumns;\n  }\n\n  cellsGroupedByRow() {\n    const groupedRows = [[], [], [], []];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        groupedRows[row].push(this.board[row][col]);\n      }\n    }\n\n    return groupedRows;\n  }\n\n  moveLeft() {\n    const previousState = JSON.stringify(this.board);\n    const rows = this.cellsGroupedByRow();\n\n    for (let rowIdx = 0; rowIdx < 4; rowIdx++) {\n      let row = rows[rowIdx];\n\n      row = this.combineTiles(row);\n      this.board[rowIdx] = row;\n    }\n\n    if (JSON.stringify(this.board) !== previousState) {\n      this.addRandomTile();\n    }\n  }\n\n  moveRight() {\n    const previousState = JSON.stringify(this.board);\n    const rows = this.cellsGroupedByRow();\n\n    for (let rowIdx = 0; rowIdx < 4; rowIdx++) {\n      let row = rows[rowIdx].reverse();\n\n      row = this.combineTiles(row);\n      row.reverse();\n      this.board[rowIdx] = row;\n    }\n\n    if (JSON.stringify(this.board) !== previousState) {\n      this.addRandomTile();\n    }\n  }\n\n  moveUp() {\n    const previousState = JSON.stringify(this.board);\n    const columns = this.cellsGroupedByColumn();\n\n    for (let col = 0; col < 4; col++) {\n      let column = columns[col];\n\n      column = this.combineTiles(column);\n\n      for (let row = 0; row < 4; row++) {\n        this.board[row][col] = column[row];\n      }\n    }\n\n    if (JSON.stringify(this.board) !== previousState) {\n      this.addRandomTile();\n    }\n  }\n\n  moveDown() {\n    const previousState = JSON.stringify(this.board);\n    const columns = this.cellsGroupedByColumn();\n\n    for (let col = 0; col < 4; col++) {\n      let column = columns[col].reverse();\n\n      column = this.combineTiles(column);\n      column.reverse();\n\n      for (let row = 0; row < 4; row++) {\n        this.board[row][col] = column[row];\n      }\n    }\n\n    if (JSON.stringify(this.board) !== previousState) {\n      this.addRandomTile();\n    }\n  }\n\n  win() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 2048) {\n          this.hasWon = true;\n\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n  canMove() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 0) {\n          return true;\n        }\n\n        if (row < 3 && this.board[row][col] === this.board[row + 1][col]) {\n          return true;\n        }\n\n        if (col < 3 && this.board[row][col] === this.board[row][col + 1]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n  getScore() {\n    return this.currentScore;\n  }\n  getState() {\n    return this.board;\n  }\n  getStatus() {\n    return this.status;\n  }\n  start() {\n    this.currentBoard = JSON.parse(JSON.stringify(this.board));\n    this.currentScore = this.initialScore;\n    this.addRandomTile();\n    this.addRandomTile();\n    this.status = 'playing';\n  }\n  restart() {\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.currentBoard = JSON.parse(JSON.stringify(this.board));\n    this.currentScore = this.initialScore;\n    this.status = 'idle';\n    this.hasWon = false;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","initialScore","instance","Constructor","TypeError","board","currentBoard","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","currentScore","status","hasWon","key","value","emptyCells","row","col","push","randomCell","Math","floor","random","columns","column","combineTiles","tiles","result","filter","tile","scoreChange","newTiles","concat","groupedColumns","groupedRows","previousState","JSON","stringify","rows","cellsGroupedByRow","rowIdx","addRandomTile","reverse","cellsGroupedByColumn","parse","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$startButton","document","querySelector","$197cd56b15c33885$var$gameField","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$loseMessage","$197cd56b15c33885$var$winMessage","$197cd56b15c33885$var$updateBoardUI","querySelectorAll","score","getScore","textContent","getState","forEach","rowIndex","cells","cellValue","colIndex","cell","className","classList","add","addEventListener","getStatus","start","restart","remove","keyboardEvent","moveUp","moveDown","moveLeft","moveRight","win","canMove"],"version":3,"file":"index.ae5af2de.js.map"}